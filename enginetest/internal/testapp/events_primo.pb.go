// Code generated by protoc-gen-go-primo. DO NOT EDIT.
// versions:
// 	protoc-gen-go-primo v
// 	protoc              v6.31.1
// source: github.com/dogmatiq/enginekit/enginetest/internal/testapp/events.proto

package testapp

import action "github.com/dogmatiq/enginekit/enginetest/internal/action"

type DoActionsBuilder struct {
	prototype DoActions
}

// NewDoActionsBuilder returns a builder that constructs [DoActions] messages.
func NewDoActionsBuilder() *DoActionsBuilder {
	return &DoActionsBuilder{}
}

// From configures the builder to use x as the prototype for new messages,
// then returns b.
//
// It performs a shallow copy of x, such that any changes made via the builder
// do not modify x. It does not make a copy of the field values themselves.
func (b *DoActionsBuilder) From(x *DoActions) *DoActionsBuilder {
	b.prototype.Actions = x.Actions
	return b
}

// Build returns a new [DoActions] containing the values configured via the builder.
//
// Each call returns a new message, such that future changes to the builder do
// not modify previously constructed messages.
func (b *DoActionsBuilder) Build() *DoActions {
	return &DoActions{
		Actions: b.prototype.Actions,
	}
}

// WithActions configures the builder to set the Actions field to v,
// then returns b.
func (b *DoActionsBuilder) WithActions(v []*action.Action) *DoActionsBuilder {
	b.prototype.Actions = v
	return b
}

type GenericEventBuilder struct {
	prototype GenericEvent
}

// NewGenericEventBuilder returns a builder that constructs [GenericEvent] messages.
func NewGenericEventBuilder() *GenericEventBuilder {
	return &GenericEventBuilder{}
}

// From configures the builder to use x as the prototype for new messages,
// then returns b.
//
// It performs a shallow copy of x, such that any changes made via the builder
// do not modify x. It does not make a copy of the field values themselves.
func (b *GenericEventBuilder) From(x *GenericEvent) *GenericEventBuilder {
	b.prototype.Value = x.Value
	return b
}

// Build returns a new [GenericEvent] containing the values configured via the builder.
//
// Each call returns a new message, such that future changes to the builder do
// not modify previously constructed messages.
func (b *GenericEventBuilder) Build() *GenericEvent {
	return &GenericEvent{
		Value: b.prototype.Value,
	}
}

// WithValue configures the builder to set the Value field to v,
// then returns b.
func (b *GenericEventBuilder) WithValue(v string) *GenericEventBuilder {
	b.prototype.Value = v
	return b
}

// SetActions sets the x.Actions field to v, then returns x.
func (x *DoActions) SetActions(v []*action.Action) {
	x.Actions = v
}

// SetValue sets the x.Value field to v, then returns x.
func (x *GenericEvent) SetValue(v string) {
	x.Value = v
}

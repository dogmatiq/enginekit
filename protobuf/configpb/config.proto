syntax = "proto3";
package dogma.protobuf;

option go_package = "github.com/dogmatiq/enginekit/protobuf/configpb";

import "github.com/dogmatiq/enginekit/protobuf/identitypb/identity.proto";

// MessageKind is an enumeration of the kinds of message, represented by the
// [dogma.Command], [dogma.Event], and [dogma.Timeout] interfaces.
enum MessageKind {
  UNKNOWN_MESSAGE_KIND = 0;
  COMMAND = 1;
  EVENT = 2;
  TIMEOUT = 3;
}

// HandlerType is an enumeration of the types of handlers that an application
// can contain.
enum HandlerType {
  UNKNOWN_HANDLER_TYPE = 0;
  AGGREGATE = 1;
  PROCESS = 2;
  INTEGRATION = 3;
  PROJECTION = 4;
}

// Application represents a Dogma application hosted by the engine on the
// server.
message Application {
  // Identity is the application's identity.
  Identity identity = 1;

  // GoType is the fully-qualified name of the Go type that provides as the
  // application's implementation.
  string go_type = 2;

  // Handlers is the set of handlers within the application.
  repeated Handler handlers = 3;
}

// Handler is a message handler within an application.
message Handler {
  // Identity is the handler's identity.
  Identity identity = 1;

  // GoType is the fully-qualified name of the Go type that provides as the
  // handler's implementation.
  string go_type = 2;

  // Type is the handler's type.
  HandlerType type = 3;

  // ProducedMessages is the set of messages produced by this handler.
  //
  // The keys are the fully-qualified names of the message's Go type and the
  // value is the kind of message implemented by that type.
  map<string, MessageKind> produced_messages = 4;

  // ConsumedMessages is the set of messages consumed by this handler.
  //
  // The keys are the fully-qualified names of the message's Go type and the
  // value is the kind of message implemented by that type.
  map<string, MessageKind> consumed_messages = 5;

  // IsDisabled indicates whether the handler is disabled.
  bool is_disabled = 6;
}

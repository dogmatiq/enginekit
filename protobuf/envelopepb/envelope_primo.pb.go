// Code generated by protoc-gen-go-primo. DO NOT EDIT.
// versions:
// 	protoc-gen-go-primo v
// 	protoc              v6.30.2
// source: github.com/dogmatiq/enginekit/protobuf/envelopepb/envelope.proto

package envelopepb

import (
	identitypb "github.com/dogmatiq/enginekit/protobuf/identitypb"
	uuidpb "github.com/dogmatiq/enginekit/protobuf/uuidpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

type EnvelopeBuilder struct {
	prototype Envelope
}

// NewEnvelopeBuilder returns a builder that constructs [Envelope] messages.
func NewEnvelopeBuilder() *EnvelopeBuilder {
	return &EnvelopeBuilder{}
}

// From configures the builder to use x as the prototype for new messages,
// then returns b.
//
// It performs a shallow copy of x, such that any changes made via the builder
// do not modify x. It does not make a copy of the field values themselves.
func (b *EnvelopeBuilder) From(x *Envelope) *EnvelopeBuilder {
	b.prototype.MessageId = x.MessageId
	b.prototype.CausationId = x.CausationId
	b.prototype.CorrelationId = x.CorrelationId
	b.prototype.SourceSite = x.SourceSite
	b.prototype.SourceApplication = x.SourceApplication
	b.prototype.SourceHandler = x.SourceHandler
	b.prototype.SourceInstanceId = x.SourceInstanceId
	b.prototype.CreatedAt = x.CreatedAt
	b.prototype.ScheduledFor = x.ScheduledFor
	b.prototype.Description = x.Description
	b.prototype.MediaType = x.MediaType
	b.prototype.Data = x.Data
	b.prototype.Attributes = x.Attributes
	return b
}

// Build returns a new [Envelope] containing the values configured via the builder.
//
// Each call returns a new message, such that future changes to the builder do
// not modify previously constructed messages.
func (b *EnvelopeBuilder) Build() *Envelope {
	return &Envelope{
		MessageId:         b.prototype.MessageId,
		CausationId:       b.prototype.CausationId,
		CorrelationId:     b.prototype.CorrelationId,
		SourceSite:        b.prototype.SourceSite,
		SourceApplication: b.prototype.SourceApplication,
		SourceHandler:     b.prototype.SourceHandler,
		SourceInstanceId:  b.prototype.SourceInstanceId,
		CreatedAt:         b.prototype.CreatedAt,
		ScheduledFor:      b.prototype.ScheduledFor,
		Description:       b.prototype.Description,
		MediaType:         b.prototype.MediaType,
		Data:              b.prototype.Data,
		Attributes:        b.prototype.Attributes,
	}
}

// WithMessageId configures the builder to set the MessageId field to v,
// then returns b.
func (b *EnvelopeBuilder) WithMessageId(v *uuidpb.UUID) *EnvelopeBuilder {
	b.prototype.MessageId = v
	return b
}

// WithCausationId configures the builder to set the CausationId field to v,
// then returns b.
func (b *EnvelopeBuilder) WithCausationId(v *uuidpb.UUID) *EnvelopeBuilder {
	b.prototype.CausationId = v
	return b
}

// WithCorrelationId configures the builder to set the CorrelationId field to v,
// then returns b.
func (b *EnvelopeBuilder) WithCorrelationId(v *uuidpb.UUID) *EnvelopeBuilder {
	b.prototype.CorrelationId = v
	return b
}

// WithSourceSite configures the builder to set the SourceSite field to v,
// then returns b.
func (b *EnvelopeBuilder) WithSourceSite(v *identitypb.Identity) *EnvelopeBuilder {
	b.prototype.SourceSite = v
	return b
}

// WithSourceApplication configures the builder to set the SourceApplication field to v,
// then returns b.
func (b *EnvelopeBuilder) WithSourceApplication(v *identitypb.Identity) *EnvelopeBuilder {
	b.prototype.SourceApplication = v
	return b
}

// WithSourceHandler configures the builder to set the SourceHandler field to v,
// then returns b.
func (b *EnvelopeBuilder) WithSourceHandler(v *identitypb.Identity) *EnvelopeBuilder {
	b.prototype.SourceHandler = v
	return b
}

// WithSourceInstanceId configures the builder to set the SourceInstanceId field to v,
// then returns b.
func (b *EnvelopeBuilder) WithSourceInstanceId(v string) *EnvelopeBuilder {
	b.prototype.SourceInstanceId = v
	return b
}

// WithCreatedAt configures the builder to set the CreatedAt field to v,
// then returns b.
func (b *EnvelopeBuilder) WithCreatedAt(v *timestamppb.Timestamp) *EnvelopeBuilder {
	b.prototype.CreatedAt = v
	return b
}

// WithScheduledFor configures the builder to set the ScheduledFor field to v,
// then returns b.
func (b *EnvelopeBuilder) WithScheduledFor(v *timestamppb.Timestamp) *EnvelopeBuilder {
	b.prototype.ScheduledFor = v
	return b
}

// WithDescription configures the builder to set the Description field to v,
// then returns b.
func (b *EnvelopeBuilder) WithDescription(v string) *EnvelopeBuilder {
	b.prototype.Description = v
	return b
}

// WithMediaType configures the builder to set the MediaType field to v,
// then returns b.
func (b *EnvelopeBuilder) WithMediaType(v string) *EnvelopeBuilder {
	b.prototype.MediaType = v
	return b
}

// WithData configures the builder to set the Data field to v,
// then returns b.
func (b *EnvelopeBuilder) WithData(v []byte) *EnvelopeBuilder {
	b.prototype.Data = v
	return b
}

// WithAttributes configures the builder to set the Attributes field to v,
// then returns b.
func (b *EnvelopeBuilder) WithAttributes(v map[string]string) *EnvelopeBuilder {
	b.prototype.Attributes = v
	return b
}

// SetMessageId sets the x.MessageId field to v, then returns x.
func (x *Envelope) SetMessageId(v *uuidpb.UUID) {
	x.MessageId = v
}

// SetCausationId sets the x.CausationId field to v, then returns x.
func (x *Envelope) SetCausationId(v *uuidpb.UUID) {
	x.CausationId = v
}

// SetCorrelationId sets the x.CorrelationId field to v, then returns x.
func (x *Envelope) SetCorrelationId(v *uuidpb.UUID) {
	x.CorrelationId = v
}

// SetSourceSite sets the x.SourceSite field to v, then returns x.
func (x *Envelope) SetSourceSite(v *identitypb.Identity) {
	x.SourceSite = v
}

// SetSourceApplication sets the x.SourceApplication field to v, then returns x.
func (x *Envelope) SetSourceApplication(v *identitypb.Identity) {
	x.SourceApplication = v
}

// SetSourceHandler sets the x.SourceHandler field to v, then returns x.
func (x *Envelope) SetSourceHandler(v *identitypb.Identity) {
	x.SourceHandler = v
}

// SetSourceInstanceId sets the x.SourceInstanceId field to v, then returns x.
func (x *Envelope) SetSourceInstanceId(v string) {
	x.SourceInstanceId = v
}

// SetCreatedAt sets the x.CreatedAt field to v, then returns x.
func (x *Envelope) SetCreatedAt(v *timestamppb.Timestamp) {
	x.CreatedAt = v
}

// SetScheduledFor sets the x.ScheduledFor field to v, then returns x.
func (x *Envelope) SetScheduledFor(v *timestamppb.Timestamp) {
	x.ScheduledFor = v
}

// SetDescription sets the x.Description field to v, then returns x.
func (x *Envelope) SetDescription(v string) {
	x.Description = v
}

// SetMediaType sets the x.MediaType field to v, then returns x.
func (x *Envelope) SetMediaType(v string) {
	x.MediaType = v
}

// SetData sets the x.Data field to v, then returns x.
func (x *Envelope) SetData(v []byte) {
	x.Data = v
}

// SetAttributes sets the x.Attributes field to v, then returns x.
func (x *Envelope) SetAttributes(v map[string]string) {
	x.Attributes = v
}
